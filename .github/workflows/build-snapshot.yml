# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: build-SNAPSHOT

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    #- name: Fetch git tags to know if this is a release
    #  run: git fetch --prune --unshallow --tags
    - name: Update cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle
        key: .gradle
    - name: Build with Gradle
      env:
        MAVEN_URL: ${{ secrets.MAVEN_UPLOAD_URL }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_UPLOAD_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_UPLOAD_PASSWORD }}
        ARTIFACT_VERSION: SNAPSHOT
      run: ./gradlew setupCIWorkspace build uploadArchives
  regenerate-website:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
    - name: Regenerate website
      env:
        MAVEN_URL: ${{ secrets.MAVEN_UPLOAD_URL }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_UPLOAD_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_UPLOAD_PASSWORD }}
      run: curl -X PUT ${MAVEN_URL}/REGEN -u "${MAVEN_USERNAME}:${MAVEN_PASSWORD}" --data ''
  dispatch-webhook:
    runs-on: ubuntu-20.04
    needs: [build, regenerate-website]
    steps:
    - name: Webhook dispatch
      uses: distributhor/workflow-webhook@v1.0.5
      env:
        webhook_url: ${{ secrets.WEBHOOK_URL }}
        webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
        data: '{"version": "SNAPSHOT"}'

